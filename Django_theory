- Django
: Python_으로 만들어진 오픈소스
  웹어플리케이션을 쉽게 작성할 수 있도록 도와주는 'Framework'


- Library, Framework
1. 라이브러리(library): 특수한 처리를 하기 위해서 만들어 놓은 함수 집합 (jQuery.....)
   장점: 프로그래밍의 작성이 용이
   단점: 전체 프로그램의 로직을 담당 X
   (ex: jQuery_를 이용해서 영화정보를 출력하는 문제를 구현할 때 구현 방식이 상이)

2. 프레임워크(Framework): 프로그램의 전체적인 로직(구조)이 이미 구현
                        따라서, 기본적인 코드가 제공(scaffolding)
   장점: 유지보수가 용이
   단점: 동작원리에 대한 이해가 필요

- Django_를 이용하면 웹 어플리케이션 구현이 용이
- Django 특징
  1. 장고는 MVC Model 기반 MVT Model
     MVC Model: M(model), V(view), C(controller)
     MVT Model: M(model), V(view), T(template)
         => Model: 데이터 베이스 처리
            View: 로직 담당(프로세스 처리) -> controller_의 역할 담당
            Template: 화면 담당
  2. 관리자 화면을 기본으로 제공
     관리자에 대한 ID, PW 존재(Database 저장)
     따라서 Django_는 기본적으로 데이터베이스가 설정이 된 상태로 사용
     => 기본테이블 생성 필요
        python manage.py migrate(데이터베이스 생성)

=============================================================================================
# Django_를 이용한 웹어플리케이션 구현

1. Django 설치
    => Dos_창 pip(python install package)를 통해 설치
    => PyPI(Python Package Index) repository_에 존재
    => pip install Django

2. Project Setup
    => 프로젝트의 기본 구조 작성
    => C:/python-Django 폴더 생성
    => scaffolding 명령어(django-admin startproject '프로젝트명')
       경로: C:/python-Django/MyFirstWebPoll/mysite
       application 생성: python manage.py startapp polls
    => Pycharm_을 이용하여 처리

#  Project: 전체 웹프로그래밍
   Application: 구현하는 단위 조각

3. settings.py를 통해 프로젝트의 설정 처리
4. 서버 기동(deploy, 내장된 테스트서버)
   => python manage.py runserver
   => http://localhost:8000
   => http://localhost:8000/admin : 관리자모드
   => 관리자 ID/PW 생성
      python manage.py createsuperuser

5. Polls application 예제 구현
   (1) Model 생성
       Database: 정제된 데이터의 집합체를 통칭
       DBMS(Database Management System)
       => 정보 추출, 데이터 관리(입력, 삭제, 수정) 작업프로그램
       => sqlite3: Django default DBMS
       => 계층형 데이터베이스 -> 관계형 데이터베이스(테이블 구조)
          -> 객체관계형 데이터베이스(대표적으로 Oracle)
   # 모델 작업: Database Table 생성 작업
        - models 생성 -> Class 생성
        - admin 등록 -> admin.site.register('클래스명')
        - In Terminal: python manage.py makemigrations (모델에 맞는 테이블 생성)
                       python manage.py migrate

===================================================================================
==> 1. python_을 이용해서 Web Application 구현
        - Django, Flask
        - pip install Django

    2. Django(프레임워크)
        - http://localhost:8000/polls
        -
